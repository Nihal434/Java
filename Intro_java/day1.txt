
*** James gosling in 1991 developed java ****

What is programming
--> It is a technological process for telling computer which tasks to perform is order to solve problems by taking some inputs.

---------------------------------------------->

Day-1 Agenda : Variable and declaration of Variable

variable : it is a container used to store some value/data 

total no. of primitive datatypes = 8
int
byte
float
boolean
double
long
char
short
----------------->

syntax to create variables 
:-
Datatype Var_name;

e.g int age;
    string name;

----------------->

problem statement :-  A student has age and location

class Student{
    int age;
    string loc;

}

*****************

Day-2 Agenda : custom variable/user defined variable

class Phone{
    int landline;
    int[] mobile;
    string email;
}
class Emp{
    string name;
    string loc;
    phone ph;   // user defined data type/custom data type passing phone class as a datatype 
}

----------------->

Aggregation : creating a class variable inside another class

why we need custom var ?
--> to overcome the limitations of primitive date type
    if we create user defined data type in java then we can store multiple diffrent data type at a time

----------------->

problem statement : 
A student has age name age and address. address means house/flat no. street name area city and pin code

class Address{
    int flat_no;
    string house_name;
    string street_name;
    string area;
    string city_name;
    int pin_code;

}
class Student{
    int age;
    string name;
    Address add;
}

*****************

Agenda day-3 : why to create class in java
               what is class
               what is oops

class : class is a real world entity which consists of variable/attributes and methods.
oops : it is a set of rules which contains methods and classes.

*****************

Agenda day-4 : what is methods
               how to define methods in java 

method is a subprogram/operations, collection of statements which is used to do some operations.

syntax of method : void NameOfMethod( input parameters ){
                                                            # programs/statement
                                                        }

void nameOfMethod( input parameters ) ==> method header part / signature

{ <----------------------------------------- start of method

    # programs/statement 
    
} <----------------------------------------- end of method


class Calaculator{
    int price = 999 ;
    string cname = "casio";
    
    void addTwo(int a , int b){
        int c;
        c = a+b;
        System.out.println(c); 
    }
}

*****************
Agenda Day-5 : how to test our class


class Calaculator{
    void multiplication(int num1,int num2){
        int product = num1*num2;
        System.out.println("product" + product);
    }
    void addTwo(int a , int b){
        int c;
        c = a+b;
        System.out.println(c); 
    }
}


class Genral_test {
    public static void main(String[] args) {

        Calaculator c1 = new Calaculator();
        c1.multiplication(10,20);
        c1.addTwo(10,20);
        
    }
    
}

Agenda Day-6 : running code in ecllipse

*****************

Agenda Day-7 : 

*****************
Agenda Day-8 : method return type

-> If we want some output from method then we need return statement
-> it will be the last line of our code
-> we can return only single value from method
-> if we want to return more than one thing then we have to return array and have to mention it in the method signature
-> only one return statement get executed in one method but we can write multiple return statement

*****************
Agenda Day-9 : Inter method inter class communication

*****************
Agenda Day-10 : How java works
               What is JRE JDK

-> 

*****************
Agenda Day-11 : JIT compiler
                packages and import

-> JIT : Just In Time compiler

*****************
Agenda Day-12 : Object creation
                new keyword
                reference variable

-> new keyword : it is a keyword and it creates a new memory loc inside heap memory for reference variable 
                 it is a keyword use to create instance of class
                 In other words, it instantiates a class by allocating memory(heap memory) for a new object and 
                 returning a reference to that memory.

-> reference variable : It is used to point objects/class
                        It holds address of object in heap memory

-> object : An object is a member of a Java class, which has its own identity, 
            behavior, and state. An object is also known as an instance of a class 
            because a class is a blueprint from which an object is created during runtime. 
            Basically, an object is created using the new keyword and the state of an object is stored in a variable, 
            whereas the behavior of an object is displayed using functions (methods).
            -> also object is a physical  entity present in JVM memory space.

*****************
Agenda Day-13 : Global & local scope
                Global & local variables
                

->  Global scope : Global scope is a scope where variable is accessible throughout the code
    Local scope : Local scope is a scope where variable is accessible inside the particular method where it is defined

    Global variable : Global variable is a varibale where variable is defined inside a class and accessible throughoutthe class and can be
                      accessible by any method which is inside the same class
    
    Local variable : local variable is a variable which is defined inside a method and accessible inside the same method only and not outside the method


*****************
Agenda Day-14 : data type in java


-> primitive data type : inbuilt datatype
                         object of primitive datatype never created means heap memorynot created
                         value is stored inside normal memory
                         1. byte -128 to +127  [1 byte]
                         2. short [2 byte]
                         3. int (-2^31 to 2^31 - 1) [4 byte]
                         4. long (-2^63 to 2^63 -1) [8 byte]
                         5. float [4 byte]
                         6. double [8 byte]
                         7. boolean [1 bit]
                         8. char [2 byte] 
                          

   non primitive datatype : custom datatype / user defined datatype / it is a datatype which is built on primitive datatype
                            object of non-primitive datatype is created
                            e.g string ;
                                Phone ph ;


*****************
Agenda Day-15 : operators in java 

-> 1. Arithmetic operators : +,-,*,/,%
   2. Conditional/relational operations : >,<,>=>,<=,==,!= [output of Conditional operators is always boolean means true or false]
   3. Logical operators : and(&&), or(||), not(!)
   4. bitwise operator :   bitwise and(&), bitwise or(|)

*****************
Agenda Day-16 : Flow control statements
                1. Conditional statement (if, if-else,switch)
                2. Iterative statement (for,while,do-while)
                3. Transfer statement (break,continue)

